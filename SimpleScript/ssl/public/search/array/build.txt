//  Author: Corey Ferguson
//  Date:   August 8, 2023
//  File:   build.txt

include("@/exception/rangeExcept")

func main()
    if !nrows(argv)
        expectException("1 argument(s), got {}" format nrows(argv))
    end if
    
    if nrows(argv) >= 4
        expectException("3 argument(s), got {}" format nrows(argv))
    end if
    
    array arr = ((argv row 0) slice 1, (argv cell 0, 0))
    
    beg = 0
    
    if (nrows(argv) > 1)
        beg = ((argv row 1) slice 1, (argv cell 1, 0))
        
        if subtypeOf beg !== "integer"
            typeException(subtypeOf beg, "integer")
        end if
        
        if beg < 0 || beg > count arr
            rangeExcept("beg {}, count {}" format array(beg, count arr))
        end if
    end if
    
    end = count arr
    
    if (nrows(argv) === 3)
        end = ((argv row 2) slice 1, (argv cell 2, 0))
        
        if subtypeOf end !== "integer"
            typeException(subtypeOf end, "integer")
        end if
        
        if end < beg || end > count arr
            rangeExcept("beg {}, end {}, count {}" format array(beg, end, count arr))
        end if
    end if

    len = floor((end - beg) / 2)
    
    echo "{}\n" format arr.(beg + len)
    
    if len !== 0
        build(arr, beg, beg + len)
    end if
    
    if beg + len !== end - 1
        build(arr, beg + len + 1, end)
    end if
end func

return main()

