//  Author: Corey Ferguson
//  Date:   August 3, 2023
//  File:   replaceAll.txt
//

include("@/exception/expectExcept")

func main()
    if nrows(argv) !== 3
        expectExcept("3 argument(s), got {}" format nrows(argv))
    end if

    text = ((argv row 0) slice 1, (argv cell 0, 0))

    if typeOf text !== "string"
        typeExcept(typeOf text, "string")
    end if

    if text === null
        throw "null"
    end if

    pat = ((argv row 1) slice 1, (argv cell 1, 0))

    if typeOf pat !== "string"
        typeExcept(typeOf pat, "string")
    end if

    if pat === null
        throw "null"
    end if

    newPat = ((argv row 2) slice 1, (argv cell 2, 0))

    if typeOf newPat !== "string"
        typeExcept(typeOf newPat, "string")
    end if

    if newPat === null
        throw "null"
    end if

    for i = 0; i <= count text - count pat;
        j = 0
        while j < count pat && text.(i + j) === pat.j
            j += 1
        end while
        
        if j === count pat
            text = (text slice 0, i) + newPat + (text substr i + count pat)
            i += (count newPat ? count newPat : 1)
        else
            i += 1
        end if
    end for

    return text
end func

return main()
